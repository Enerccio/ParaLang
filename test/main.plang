using IO;
using System;
using Math;
using Math.Matrix;
using Random;
using Collections;
using Distributed;
using Utils;
using Collections.List;

module Main {
    
    defn find_rvalue(seed){
        var r = new Random.Random(seed);
        var i=0;
        while (i++ < 10000)
            r.get_int(1);
        return r.seed;
    }
    
    defn restricted calculate(a, b){
        IO.out.lerp();
        
        IO.out.println("Seed: " + Utils.apply_timer(find_rvalue, [0]));
        
        var xxx = new [10000];
        for (var i=0; i<xxx.size(); i++){
            xxx.set(i, i);
        }
        
        IO.out.println("Distributed full: ");
        var result1 = Utils.apply_timer(Distributed.distributed_map, [xxx.copy(), find_rvalue]);
        
        IO.out.println("Not distributed full: ");
        var result2 = Utils.apply_timer(Collections.map, [xxx.copy(), find_rvalue]);
        
        IO.out.println("Results are equal: " + (result1 == result2));
    }
    
};