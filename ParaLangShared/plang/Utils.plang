import java.util.Date;

using System;
using System.BaseException;

###
    Utility module providing utility functions and classes.
###
module Utils {

    ###
        Prints timer information about method call
    ###
    defn apply_timer(runnable, argument_array){
        var ct = System.current_time();
        try {
            return System.apply(runnable, argument_array);
        } finally {
            IO.out.println("Call took: " + (System.current_time() - ct) + " ms");
        }
    }

    ###
        Time instance encapsulates unix time. 
    ###
    class Time {
        var __date;
        
        ### 
            Creates new Time instance. If provided value is NoValue, it is initialized into current time, otherwise passed argument must be integer.
        ###
        defn init(unixTime){
            if (unixTime == NoValue)
                __date = Date->Date();
            else
                __date = Date->Date(unixTime);
        }
        
        ###
            Returns unix time value as integer.
            *ret integer
        ###
        defn get_time(){
            return __date->getTime();
        }
    }

	###
	Denotes that index was out of bounds
	###
    class ArrayIndexOutOfBoundsException > BaseException {
    	defn init(){
    		super.init("Incorrect index");
    	}
    }
    
    ###
    Denotes that argument passed was undexpected
    ###
    class IllegalArgumentException > BaseException {
    	
    }
};